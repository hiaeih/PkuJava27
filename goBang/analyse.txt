1:判断输赢，两种方法：
  1）暴力破解：否定
  2）查询最新下子的周围棋子情况，判断是否有自己的棋子，共8个方向（左、右；上、下；左下、右上；左上、右下）；
  3）最多只需要5次判断，表明成功，否则中间即停止返回继续下子；
2：AI算法，较为简单（我的实现，还不是很智能）
  1）采用两个循环从左上角[0][0]检测（O(N^2)），当该位置上没有棋子时进行以该位置为基础的8个方向下同类棋子的最大值和空闲棋子的值数。
  2）checkMax方法找到某个方向上的有该类棋子并且以它为基础可以下子的选择最多，因此只需要一个常数时间(O(1))，最后返回8个方向上有最大数；
     因为要同时考虑防守两个方面，因此对于玩家（黑子）和电脑（白子）都要进行最大数的计算，最终确定一个最大的数值；
  3）得到一个相对于自己和对手二者的最大值，在该位置下子最优，返回一个下标数组result，再用setBoard方法进行对该位置的棋子放置完成。
  4）判定此次下棋是否有赢；

方法二：可以根据选择某个位置的最有得分，设置一个攻击防守分数值，目前还未实现。
